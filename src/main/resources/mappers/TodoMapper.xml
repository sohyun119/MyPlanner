<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.SH.planner.plan.dao.TodoDAO">

	<select id="selectTodoList" parameterType="map" resultType="com.SH.planner.plan.model.TodoList">
		SELECT 
			`id`
			, `userId`
			, `connectedTodoId`
			, `title`
			, `date`
			, `startDate`
			, `endDate`
			, `color`
			, `createdAt`
			, `updatedAt`
		FROM 
			`todoList`
		WHERE
			`date` = #{date}
			AND `userId` = #{userId}
	</select>


	<insert id="basicInsertTodo" parameterType="com.SH.planner.plan.model.TodoList">
		INSERT INTO `todoList`
		(
			`userId`
			, `connectedTodoId`
			, `title`
			, `date`
			, `color`
			, `createdAt`
			, `updatedAt`
		)
		VALUES
		(
			#{userId}
			, #{connectedTodoId}
			, #{title}
			, #{date}
			, #{color}
			, now()
			, now()
		)
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
		
	</insert>
	
	<insert id="defaultCheck" parameterType="int">
		INSERT INTO `check`
		(
			`todoListId`
			, `isCheck`
			, `createdAt`
		)
		VALUES
		(
			#{todoListId}
			, false
			, now()
		)
	</insert>


	<select id="isChecked" parameterType="int" resultType="boolean">
		SELECT 
			`isCheck`
		FROM
			`check`
		WHERE
			`todoListId`=#{todoListId}
	</select>

	<update id="cancleCheck" parameterType="int">
		UPDATE
			`check`
		SET
			`isCheck` = false
		WHERE
			`todoListId` = #{todoListId}
	</update>
	
	<update id="plusCheck" parameterType="int">
		UPDATE
			`check`
		SET
			`isCheck` = true
		WHERE
			`todoListId` = #{todoListId}
	</update>
	
	
	<delete id="deleteTodo" parameterType="int" >
		DELETE FROM
			`todoList`
		WHERE
			`id` = #{todoListId}
	</delete>
	
	<delete id="deleteCheck" parameterType="int">
		DELETE FROM
			`check`
		WHERE
			`todoListId` = #{todoListId}
	</delete>
	
	
	<select id="selectSimpleTodoList" parameterType="map" resultType="com.SH.planner.plan.model.TodoList">
		SELECT 
			`id`
			, `userId`
			, `connectedTodoId`
			, `title`
			, `date`
			, `startDate`
			, `endDate`
			, `color`
			, `createdAt`
			, `updatedAt`
		FROM
			`todoList`
		WHERE
			`userId` = #{userId} AND `color` = #{color}
	</select>
	
	<insert id="insertSimpleTodo" parameterType="map">
		INSERT INTO `todoList`
		(
			`userId`
			, `title`
			, `startDate`
			, `endDate`
			, `color`
			, `createdAt`
			, `updatedAt`
		)
		VALUES
		(
			#{userId}
			, #{title}
			, #{startDate}
			, #{endDate}
			, #{color}
			, now()
			, now()
		)
	</insert>
	
	
	<select id="selectPreTodo" parameterType="map" resultType="com.SH.planner.plan.model.TodoList">
		SELECT
			`id`
			, `userId`
			, `connectedTodoId`
			, `title`
			, `date`
			, `startDate`
			, `endDate`
			, `color`
			, `createdAt`
			, `updatedAt`
		FROM
			`todoList`
		WHERE
			`userId`=#{userId} AND `color`=#{color} AND
			<![CDATA[ `startDate` <= #{date}  ]]> AND `endDate` >= #{date}
	</select>


	<update id="fromBlackTodoUpdate" parameterType="int">
		UPDATE 
			`todoList`
		SET 
			`color` = 'red'
		WHERE 
			`id` = #{todoListId}
	</update>

	<update id="fromRedTodoUpdate" parameterType="int">
		UPDATE 
			`todoList`
		SET 
			`color` = 'black'
		WHERE 
			`id` = #{todoListId}
	</update>

	
	<select id="connectedTodoList" parameterType="map" resultType="com.SH.planner.plan.model.TodoList">
		SELECT 
			`id`
			, `userId`
			, `connectedTodoId`
			, `title`
			, `date`
			, `startDate`
			, `endDate`
			, `color`
			, `createdAt`
			, `updatedAt`
		FROM
			`todoList`
		WHERE
			`userId` = #{userId} AND `date` = #{date} AND
			 `connectedTodoId` is NOT NULL AND `connectedTodoId` != 0
	</select>







</mapper>